# =============================================================================
# Environment Variables Template for Express.js Microservice
# =============================================================================
# 
# This file serves as a template for the required environment variables.
# Copy this file to .env and fill in the actual values for your environment.
# 
# IMPORTANT: Never commit the actual .env file to version control!
# This file contains sensitive information like database credentials and secrets.
# =============================================================================

# =============================================================================
# Application Configuration
# =============================================================================

# The application environment (development, production, test)
NODE_ENV=development

# The port on which the server will listen
PORT=3001

# The minimum level of logs to output (error, warn, info, debug)
LOG_LEVEL=info

# =============================================================================
# Security Configuration
# =============================================================================

# Cross-Origin Resource Sharing allowed origin
# Use '*' for development, specific domain for production
CORS_ORIGIN=*

# JWT Secret Key (REQUIRED - Change this in production!)
# Generate a strong, random secret key for production use
JWT_SECRET=your-super-secret-jwt-key-that-is-long-and-random-change-this-in-production

# JWT Token expiration time
# Examples: 1d (1 day), 7d (7 days), 1h (1 hour), 30m (30 minutes)
JWT_EXPIRES_IN=1d

# =============================================================================
# Database Configuration
# =============================================================================

# PostgreSQL Database URL (REQUIRED)
# Format: postgresql://username:password@host:port/database
# Example for local development:
POSTGRES_URL=postgresql://postgres:password@localhost:5432/mydatabase

# MongoDB Database URL (REQUIRED)
# Format: mongodb://username:password@host:port/database
# Example for local development:
MONGO_URL=mongodb://localhost:27017/mydatabase

# Redis Cache URL (REQUIRED)
# Format: redis://username:password@host:port
# Example for local development:
REDIS_URL=redis://localhost:6379

# =============================================================================
# Production Environment Variables (Optional)
# =============================================================================
# Uncomment and configure these for production deployment

# # Production Database URLs (replace with your actual production URLs)
# POSTGRES_URL=postgresql://prod_user:prod_password@prod_host:5432/prod_database
# MONGO_URL=mongodb+srv://prod_user:prod_password@prod_cluster.mongodb.net/prod_database
# REDIS_URL=redis://prod_user:prod_password@prod_host:6379

# # Production Security Settings
# CORS_ORIGIN=https://yourdomain.com
# JWT_SECRET=your-production-jwt-secret-key-here
# LOG_LEVEL=warn

# =============================================================================
# Docker Development Environment Variables
# =============================================================================
# These are the default values used by docker-compose.yml

# # Docker PostgreSQL
# POSTGRES_URL=postgresql://postgres:password@postgres:5432/mydatabase

# # Docker MongoDB
# MONGO_URL=mongodb://mongo:27017/mydatabase

# # Docker Redis
# REDIS_URL=redis://redis:6379

# =============================================================================
# Notes for Different Environments
# =============================================================================
#
# Development:
# - Use local database instances or Docker containers
# - Set NODE_ENV=development
# - Use LOG_LEVEL=debug for detailed logging
#
# Testing:
# - Use test-specific databases
# - Set NODE_ENV=test
# - Use in-memory databases when possible
#
# Production:
# - Use production-grade databases
# - Set NODE_ENV=production
# - Use strong, unique JWT_SECRET
# - Set specific CORS_ORIGIN
# - Use LOG_LEVEL=warn or error
#
# =============================================================================
